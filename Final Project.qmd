---
title: "Final Project"
author: "Rajvir Vyas, Yashwant Sathish Kumar, Akhil Elamanchili"
theme: superhero
format: html
editor: visual
---

## Final Project

```{r}
#install.packages("devtools")
#devtools::install_github("JaseZiv/worldfootballR")
```

```{r}
library(tidyverse)
library(worldfootballR)
```

```{r}
current_season_standard <- load_fb_big5_advanced_season_stats(season_end_year = 2024, stat_type = "standard", team_or_player = "player")
current_season_chances <- load_fb_big5_advanced_season_stats(season_end_year = 2024, stat_type = "gca", team_or_player = "player")
current_season_chances <- current_season_chances |>
  mutate(Pass_to_SCA = PassLive_GCA + PassDead_GCA)
```


```{r}
filter_mid_by_league_position <- function(comp, position){
  current_season_chances |>
    filter(Comp == comp, str_detect(Pos, position)) |>
    filter(Pass_to_SCA > 0) |>
    arrange(desc(Pass_to_SCA))
}

premier_league_midfielders <- filter_mid_by_league_position("Premier League", "MF")
premier_league_midfielders$LastName <- sub(".*\\s", "", premier_league_midfielders$Player)

la_liga_midfielders <- filter_mid_by_league_position("La Liga", "MF")
la_liga_midfielders$LastName <- sub(".*\\s", "", la_liga_midfielders$Player)

bundesliga_midfielders <- filter_mid_by_league_position("Bundesliga", "MF")
bundesliga_midfielders$LastName <- sub(".*\\s", "", bundesliga_midfielders$Player)

serie_a_midfielders <- filter_mid_by_league_position("Serie A", "MF")
serie_a_midfielders$LastName <- sub(".*\\s", "", serie_a_midfielders$Player)

ligue_un_midfielders <- filter_mid_by_league_position("Ligue 1", "MF")
ligue_un_midfielders$LastName <- sub(".*\\s", "", ligue_un_midfielders$Player)
```

```{r}
filter_att_by_league_position <- function(comp, position){
  current_season_standard |>
    filter(Comp == comp, str_detect(Pos, position)) |>
    filter(Gls > 0)|>
    arrange(desc(Gls))
}
premier_league_attackers <- filter_att_by_league_position("Premier League", "FW")
premier_league_attackers$LastName <- sub(".*\\s", "", premier_league_attackers$Player)

la_liga_attackers <- filter_att_by_league_position("La Liga", "FW")
la_liga_attackers$LastName <- sub(".*\\s", "", la_liga_attackers$Player)

bundesliga_attackers <- filter_att_by_league_position("Bundesliga", "FW")
bundesliga_attackers$LastName <- sub(".*\\s", "", bundesliga_attackers$Player)

serie_a_attackers <- filter_att_by_league_position("Serie A", "FW")
serie_a_attackers$LastName <- sub(".*\\s", "", serie_a_attackers$Player)

ligue_un_attackers <- filter_att_by_league_position("Ligue 1", "FW")
ligue_un_attackers$LastName <- sub(".*\\s", "", ligue_un_attackers$Player)

```


```{r}
prem_urls <- tm_league_team_urls("England", 2023, league_url = NA)
print(prem_urls)
```

```{r}
get_country_transfers <- function(country) {
    # Fetch team URLs for the specified country and year
    team_urls <- tm_league_team_urls(country, 2023, league_url = NA)
    
    # Initialize a list to store transfer data for all teams
    all_transfers <- list()
    
    # Iterate over team URLs and fetch transfer data
    for (team_url in team_urls) {
        team_transfers <- tm_team_transfers(team_url, transfer_window = "all")
        all_transfers <- c(all_transfers, list(team_transfers))
    }
    
    # Combine transfer data into a single dataframe
    combined_transfers <- do.call(rbind, all_transfers)

    
    
    return(combined_transfers)
}
prem_transfers <- get_country_transfers("England")

```

```{r}
la_liga_transfers <- get_country_transfers("Spain")
```

```{r}
bundesliga_transfers <-get_country_transfers("Germany")
serie_a_transfers <- get_country_transfers("Italy")
ligue_un_transfers <- get_country_transfers("France")
  #if club2 had U21 or Teamname 'B' in it, then set transfer_fee to 0
```

```{r}
filter_by_league_transfers <- function(league_transfer){
    league_transfer|>
      filter(transfer_type == "Arrivals")|>
      filter(is_loan == FALSE)|>
      filter(appearances >= 1)
}
prem_incoming_players <- filter_by_league_transfers(prem_transfers)
la_liga_incoming_players <- filter_by_league_transfers(la_liga_transfers)
bundesliga_incoming_players <- filter_by_league_transfers(bundesliga_transfers)
serie_a_incoming_players <- filter_by_league_transfers(serie_a_transfers)
ligue_un_incoming_players <- filter_by_league_transfers(ligue_un_transfers)

```

```{r}
join_att_players_market <- function(incoming_player, positional_player){
  incoming_player|>
    inner_join(positional_player, by =c("player_name" = "Player"))|>
    mutate(GA_minus_xGA = (`G+A`) - (`npxG+xAG_Expected`))
}
complete_prem_attackers <- join_att_players_market(prem_incoming_players, premier_league_attackers)
complete_la_liga_attackers <- join_att_players_market(la_liga_incoming_players, la_liga_attackers)
complete_bundesliga_attackers <- join_att_players_market(bundesliga_incoming_players, bundesliga_attackers)
complete_serie_a_attackers <- join_att_players_market(serie_a_incoming_players, serie_a_attackers)
complete_ligue_un_attackers <- join_att_players_market(ligue_un_incoming_players, ligue_un_attackers)

```

```{r}
join_mid_players_market <- function(incoming_player, positional_player){
  incoming_player|>
    inner_join(positional_player, by =c("player_name" = "Player"))
}
complete_prem_midfielders <- join_mid_players_market(prem_incoming_players, premier_league_midfielders)
complete_la_liga_midfielders <- join_mid_players_market(la_liga_incoming_players, la_liga_midfielders)
complete_bundesliga_midfielders <- join_mid_players_market(bundesliga_incoming_players, bundesliga_midfielders)
complete_serie_a_midfielders <- join_mid_players_market(serie_a_incoming_players, serie_a_midfielders)
complete_ligue_un_midfielders <- join_mid_players_market(ligue_un_incoming_players, ligue_un_midfielders)
```

```{r}

```

```{r}
---
title: "Final Project"
author: "Rajvir Vyas, Yashwant Sathish Kumar, Akhil Elamanchili"
theme: superhero
format: html
editor: visual
---

## Final Project

```{r}
#install.packages("devtools")
#devtools::install_github("JaseZiv/worldfootballR")
```

```{r}
library(tidyverse)
library(worldfootballR)
```

```{r}
current_season_standard <- load_fb_big5_advanced_season_stats(season_end_year = 2024, stat_type = "standard", team_or_player = "player")
current_season_chances <- load_fb_big5_advanced_season_stats(season_end_year = 2024, stat_type = "gca", team_or_player = "player")
current_season_chances <- current_season_chances |>
  mutate(Pass_to_SCA = PassLive_GCA + PassDead_GCA)
```


```{r}
filter_mid_by_league_position <- function(comp, position){
  current_season_chances |>
    filter(Comp == comp, str_detect(Pos, position)) |>
    filter(Pass_to_SCA > 0) |>
    arrange(desc(Pass_to_SCA))
}

premier_league_midfielders <- filter_mid_by_league_position("Premier League", "MF")
premier_league_midfielders$LastName <- sub(".*\\s", "", premier_league_midfielders$Player)

la_liga_midfielders <- filter_mid_by_league_position("La Liga", "MF")
la_liga_midfielders$LastName <- sub(".*\\s", "", la_liga_midfielders$Player)

bundesliga_midfielders <- filter_mid_by_league_position("Bundesliga", "MF")
bundesliga_midfielders$LastName <- sub(".*\\s", "", bundesliga_midfielders$Player)

serie_a_midfielders <- filter_mid_by_league_position("Serie A", "MF")
serie_a_midfielders$LastName <- sub(".*\\s", "", serie_a_midfielders$Player)

ligue_un_midfielders <- filter_mid_by_league_position("Ligue 1", "MF")
ligue_un_midfielders$LastName <- sub(".*\\s", "", ligue_un_midfielders$Player)
```

```{r}
filter_att_by_league_position <- function(comp, position){
  current_season_standard |>
    filter(Comp == comp, str_detect(Pos, position)) |>
    filter(Gls > 0)|>
    arrange(desc(Gls))
}
premier_league_attackers <- filter_att_by_league_position("Premier League", "FW")
premier_league_attackers$LastName <- sub(".*\\s", "", premier_league_attackers$Player)

la_liga_attackers <- filter_att_by_league_position("La Liga", "FW")
la_liga_attackers$LastName <- sub(".*\\s", "", la_liga_attackers$Player)

bundesliga_attackers <- filter_att_by_league_position("Bundesliga", "FW")
bundesliga_attackers$LastName <- sub(".*\\s", "", bundesliga_attackers$Player)

serie_a_attackers <- filter_att_by_league_position("Serie A", "FW")
serie_a_attackers$LastName <- sub(".*\\s", "", serie_a_attackers$Player)

ligue_un_attackers <- filter_att_by_league_position("Ligue 1", "FW")
ligue_un_attackers$LastName <- sub(".*\\s", "", ligue_un_attackers$Player)

```


```{r}
prem_urls <- tm_league_team_urls("England", 2023, league_url = NA)
print(prem_urls)
```

```{r}
get_country_transfers <- function(country) {
    # Fetch team URLs for the specified country and year
    team_urls <- tm_league_team_urls(country, 2023, league_url = NA)
    
    # Initialize a list to store transfer data for all teams
    all_transfers <- list()
    
    # Iterate over team URLs and fetch transfer data
    for (team_url in team_urls) {
        team_transfers <- tm_team_transfers(team_url, transfer_window = "all")
        all_transfers <- c(all_transfers, list(team_transfers))
    }
    
    # Combine transfer data into a single dataframe
    combined_transfers <- do.call(rbind, all_transfers)

    
    
    return(combined_transfers)
}
prem_transfers <- get_country_transfers("England")

```

```{r}
la_liga_transfers <- get_country_transfers("Spain")
```

```{r}
bundesliga_transfers <-get_country_transfers("Germany")
serie_a_transfers <- get_country_transfers("Italy")
ligue_un_transfers <- get_country_transfers("France")
  #if club2 had U21 or Teamname 'B' in it, then set transfer_fee to 0
```

```{r}
filter_by_league_transfers <- function(league_transfer){
    league_transfer|>
      filter(transfer_type == "Arrivals")|>
      filter(is_loan == FALSE)|>
      filter(appearances >= 1)
}
prem_incoming_players <- filter_by_league_transfers(prem_transfers)
la_liga_incoming_players <- filter_by_league_transfers(la_liga_transfers)
bundesliga_incoming_players <- filter_by_league_transfers(bundesliga_transfers)
serie_a_incoming_players <- filter_by_league_transfers(serie_a_transfers)
ligue_un_incoming_players <- filter_by_league_transfers(ligue_un_transfers)

```

```{r}
join_att_players_market <- function(incoming_player, positional_player){
  incoming_player|>
    inner_join(positional_player, by =c("player_name" = "Player"))|>
    mutate(GA_minus_xGA = (`G+A`) - (`npxG+xAG_Expected`))
}
complete_prem_attackers <- join_att_players_market(prem_incoming_players, premier_league_attackers)
complete_la_liga_attackers <- join_att_players_market(la_liga_incoming_players, la_liga_attackers)
complete_bundesliga_attackers <- join_att_players_market(bundesliga_incoming_players, bundesliga_attackers)
complete_serie_a_attackers <- join_att_players_market(serie_a_incoming_players, serie_a_attackers)
complete_ligue_un_attackers <- join_att_players_market(ligue_un_incoming_players, ligue_un_attackers)

```

```{r}
join_mid_players_market <- function(incoming_player, positional_player){
  incoming_player|>
    inner_join(positional_player, by =c("player_name" = "Player"))
}
complete_prem_midfielders <- join_mid_players_market(prem_incoming_players, premier_league_midfielders)
complete_la_liga_midfielders <- join_mid_players_market(la_liga_incoming_players, la_liga_midfielders)
complete_bundesliga_midfielders <- join_mid_players_market(bundesliga_incoming_players, bundesliga_midfielders)
complete_serie_a_midfielders <- join_mid_players_market(serie_a_incoming_players, serie_a_midfielders)
complete_ligue_un_midfielders <- join_mid_players_market(ligue_un_incoming_players, ligue_un_midfielders)
```


```{r}
library(shiny)
library(plotly)

ui <- fluidPage(
  tags$head(
    tags$style(HTML("
      .container-fluid {
        text-align: center;
      }
      .sidebar, .main-panel {
        float: none;
        margin-left: auto;
        margin-right: auto;
        margin-top: 100000px;
      }
      .sidebar .panel-body, .main-panel .panel-body {
        text-align: left; /* Keep text left-aligned within panels */
      }
      #myPlot {
        margin-top: 5px; /* Adjust this value to move the plot down */
      }
    "))
  ),
  titlePanel("Transfer Fee Performances Across Top 5 Leagues"),
  sidebarLayout(
    sidebarPanel(
      selectInput("league", "Select League", choices = c("Premier League", "La Liga", "Bundesliga", "Serie A", "Ligue 1")),
      radioButtons("position", "Select Position", choices = c("Attackers", "Midfielders"))
    ),
    mainPanel(
      plotlyOutput("myPlot")
    )
  )
)

server <- function(input, output) {
  output$myPlot <- renderPlotly({
    league_data <- switch(
      input$league,
      "Premier League" = switch(
        input$position,
        "Attackers" = complete_prem_attackers,
        "Midfielders" = complete_prem_midfielders
      ),
      "La Liga" = switch(
        input$position,
        "Attackers" = complete_la_liga_attackers,
        "Midfielders" = complete_la_liga_midfielders
      ),
      "Bundesliga" = switch(
        input$position,
        "Attackers" = complete_bundesliga_attackers,
        "Midfielders" = complete_bundesliga_midfielders
      ),
      "Serie A" = switch(
        input$position,
        "Attackers" = complete_serie_a_attackers,
        "Midfielders" = complete_serie_a_midfielders
      ),
      "Ligue 1" = switch(
        input$position,
        "Attackers" = complete_ligue_un_attackers,
        "Midfielders" = complete_ligue_un_midfielders
      )
    )

    y_axis_col <- if(input$position == "Midfielders") {
      ~Pass_to_SCA
    } else {
      ~GA_minus_xGA
    }
    
    subtitle_text <- if(input$position == "Midfielders") "Number of Pass to Shot Creating Chances " else "Goals Minus Expected Goals"

    plot_ly(data = league_data, x = ~transfer_fee, y = y_axis_col, color = ~LastName, text = ~team_name, type = "scatter", mode = "markers", marker = list(size = 10, symbol = "circle")) |>
      layout(
        title = paste("<b>", input$position, input$league, "</b><br><sub>", subtitle_text, "</sub>"),
        titlefont = list(size = 18),
        xaxis = list(title = "Transfer Fee"),
        yaxis = list(title = ""),
        legend = list(
          x = 0.2, y = 1.05,
          traceorder = "normal",
          orientation = "h",
          bgcolor = "rgba(255, 255, 255, 0.0)"
        ),
        showlegend = FALSE,
        margin = list(t = 100) # Increase top margin to push the plot down
      )
  })
}

shinyApp(ui, server)

```

```{r}
ui <- fluidPage(
  titlePanel("Attackers Shooting 23-24 Across Top 5 Leagues"),
  sidebarLayout(
    sidebarPanel(
      selectInput("league", "Select League", choices = c("Premier League", "La Liga", "Bundesliga", "Serie A", "Ligue 1"))), 
    sidebarPanel(
      selectInput("position", "Select Position", choices = c("Attackers", "Midfielders", "Defenders", "Goalkeepers"))
    )),
    mainPanel(
      plotlyOutput("myPlot")
    )
  )
server2 <- function(input, output) {
  output$myPlot <- renderPlotly({
    league_data <- switch(
      input$league,
      "Premier League" = complete_prem_attackers,
      "La Liga" = complete_la_liga_attackers,
      "Bundesliga" = complete_bundesliga_attackers,
      "Serie A" = complete_serie_a_attackers,
      "Ligue 1" = complete_ligue_un_attackers
    )
     if (input$position == "Midfielders") {
      # Create a different visualization for midfielders
      # Replace this code with the desired visualization for midfielders
      plot_ly(data = league_data, 
              x = ~pass_completion_rate, 
              y = ~successful_dribbles, 
              color = ~LastName,
              type = "scatter", 
              mode = "markers",
              marker = list(size = 10, symbol = "circle")) %>%
        layout(
          title = paste("Midfielders Visualization -", input$league),
          xaxis = list(title = "Pass Completion Rate"),
          yaxis = list(title = "Successful Dribbles"),
          legend = list(
            x = 0.2, y = 1.05,
            traceorder = "normal",
            orientation = "h",
            bgcolor = "rgba(255, 255, 255, 0.0)"
          ),
          showlegend = FALSE
        )
    } else {
      # Visualization for other positions (e.g., attackers)
      plot_ly(data = league_data, 
              x = ~transfer_fee, 
              y = ~G_minus_xG_Expected, 
              color = ~LastName,
              type = "scatter", 
              mode = "markers",
              marker = list(size = 10, symbol = "circle")) %>%
        layout(
          title = paste("Attackers Visualization -", input$league),
          xaxis = list(title = "Transfer Fee"),
          yaxis = list(title = "G_minus_xG_Expected"),
          legend = list(
            x = 0.2, y = 1.05,
            traceorder = "normal",
            orientation = "h",
            bgcolor = "rgba(255, 255, 255, 0.0)"
          ),
          showlegend = FALSE
        )
    }
  })
}
shinyApp(ui,server2)
```



